name: "Build and Deploy"
on:
  push:
    branches:
      - master
    paths-ignore:
      - .gitignore
      - README.md
      - LICENSE

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # submodules: true
          # If using the 'assets' git submodule from Chirpy Starter, uncomment above
          # (See: https://github.com/cotes2020/chirpy-starter/tree/main/assets)

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v1

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3 # reads from a '.ruby-version' or '.tools-version' file if 'ruby-version' is omitted
          bundler-cache: true

      - name: Build site
        run: bundle exec jekyll b -d "_site${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: "production"

      - name: Test site
        run: |
          bundle exec htmlproofer _site --disable-external --check-html --allow_hash_href

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: "_site${{ steps.pages.outputs.base_path }}"
          
      - run: echo _site${{ steps.pages.outputs.base_path }}

  deploy:
    environment:
      name: gh-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
        
      - run: echo ${{ steps.deployment.outputs.page_url }}


  deploy-to-cos:
    needs: [build,deploy]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v3
        id: download
        with:
          name: 'my-artifact'
          path: "_site${{ steps.pages.outputs.base_path }}"

      - name: 'Echo download path'
        run: echo ${{steps.download.outputs.download-path}}
        
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: ${{steps.download.outputs.download-path}}
        
      - name: Install coscmd
        run: sudo pip install coscmd

      - name: Configure coscmd
        env:
          secret_id: ${{ secrets.SecretId }}
          secret_key: ${{ secrets.SecretKey }}
          bucket: ${{ secrets.BUCKET }}
          region: ${{ secrets.Region }}
        run: coscmd config -a $secret_id -s $secret_key -b $bucket -r $region
      - name: Upload to Tencent COS
        run: coscmd upload -rs --delete --yes ./ /
